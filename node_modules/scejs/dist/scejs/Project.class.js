(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
(function (global){
"use strict";

Object.defineProperty(exports, "__esModule", {
							value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* @class
* @constructor
*/
var Project = exports.Project = function () {
							function Project() {
														_classCallCheck(this, Project);

														this.stages = [];
														this.activeStage = null;
														this.gl = null;
							}

							/**
       * setActiveStage
       * @param {Stage} stage.
       */


							_createClass(Project, [{
														key: "setActiveStage",
														value: function setActiveStage(stage) {
																					this.activeStage = stage;

																					this.activeStage.setWebGLContext(this.gl);
														}
							}, {
														key: "getActiveStage",


														/**
              * getActiveStage
              * @returns {Stage}.
              */
														value: function getActiveStage() {
																					return this.activeStage;
														}
							}, {
														key: "addStage",


														/**
              * addStage
              * @param {Stage} stage.
              */
														value: function addStage(stage) {
																					this.stages.push(stage);
														}
							}, {
														key: "setWebGLContext",


														/**
              * setWebGLContext
              * @param {WebGLRenderingContext} glCtx.
              * @private
              */
														value: function setWebGLContext(glCtx) {
																					this.gl = glCtx;
														}
							}]);

							return Project;
}();

global.Project = Project;
module.exports.Project = Project;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[1]);
