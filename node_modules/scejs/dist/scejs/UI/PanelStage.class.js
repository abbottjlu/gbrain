(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
(function (global){
"use strict";

Object.defineProperty(exports, "__esModule", {
				value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* @class
* @constructor
*/
var PanelStage = exports.PanelStage = function () {
				function PanelStage() {
								_classCallCheck(this, PanelStage);

								this.panel = new StormPanel({ "id": 'DIVID_PanelStage',
												"paneltitle": 'STAGE' });

								this.elContent = $('#DIVID_PanelStage_content');
								this.elContentDiv = $('#DIVID_PanelStage_content div');
				}

				/**
     * @callback PanelStage~onselect
     * @param {Node} node
     */
				/**
    * show
    * @param {Array<Node>} nodes
    * @param {Node} selectedNode
    * @param {PanelStage~onselect} onselect
    */


				_createClass(PanelStage, [{
								key: "show",
								value: function show(nodes, selectedNode, onselect) {
												this.panel.show();

												this.showListObjects(nodes, selectedNode, onselect);
								}
				}, {
								key: "showListObjects",


								/**
        * showListObjects
        * @param {Array<Node>} nodes
        * @param {Node} selectedNode
        * @param {PanelStage~onselect} onselect
        * @private
        */
								value: function showListObjects(nodes, selectedNode, onselect) {
												this.elContent.html("");
												var str = '';
												for (var n = 0, f = nodes.length; n < f; n++) {
																var colorBg = selectedNode !== undefined && selectedNode === nodes[n] ? '#444' : '#000';
																var colorText = nodes[n].isEnabled() === true ? '#FFF' : '#999';
																str = "<div id='TDID_StormObjectNum_nodes" + n + "' style='background-color:" + colorBg + ";color:" + colorText + ";'>" + nodes[n].getName() + "</div>";
																this.elContent.append(str);

																var e = document.getElementById("TDID_StormObjectNum_nodes" + n);
																e.addEventListener("click", function (e, n) {
																				onselect(nodes[n]);

																				select($(e));
																}.bind(this, e, n));
												}

												this.elContentDiv.css({ 'cursor': 'pointer',
																'border': '1px solid #444' });

												this.elContentDiv.bind('mouseover', function () {
																$(this).css({ 'border': '1px solid #CCC' });
												});

												this.elContentDiv.bind('mouseout', function () {
																$(this).css({ 'border': '1px solid #444' });
												});
								}
				}], [{
								key: "select",


								/**
        * select
        * @param {HTMLDivElement} element
        * @private
        */
								value: function select(element) {
												this.elContentDiv.css("background-color", "#000");

												if (element !== undefined) element.css("background-color", "#444");
								}
				}]);

				return PanelStage;
}();

global.PanelStage = PanelStage;
module.exports.PanelStage = PanelStage;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[1]);
