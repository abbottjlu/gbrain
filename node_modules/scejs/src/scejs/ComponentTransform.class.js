import {Component} from "./Component.class";
import {Constants} from "./Constants";

/**
* @class
* @constructor
*/
export class ComponentTransform extends Component {
    constructor() {
        super();
	
        this.type = Constants.COMPONENT_TYPES.TRANSFORM;
        this.node = null;
        this.gl = null;


        this.mModelMatrix_Position = $M16([1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0]);
        this.mModelMatrix_Rotation = $M16([1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0]);
    }
	
	/**
	 * initialize
	 * @param {Node} nod
	 * @param {WebGLRenderingContext} glCtx.
	 * @override
	 */
	initialize(nod, glCtx) {
        this.node = nod;
        this.gl = glCtx;
	};	
	
	/**
	 * getMatrixPosition
	 * @returns {StormM16}
	 */
	getMatrixPosition() {
		return this.mModelMatrix_Position;
	};
	
	/**
	 * getMatrixRotation
	 * @returns {StormM16}
	 */
	getMatrixRotation() {
		return this.mModelMatrix_Rotation;
	};
}
global.ComponentTransform = ComponentTransform;
module.exports.ComponentTransform = ComponentTransform;